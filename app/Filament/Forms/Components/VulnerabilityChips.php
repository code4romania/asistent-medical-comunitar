<?php

declare(strict_types=1);

namespace App\Filament\Forms\Components;

use App\Models\Disability;
use App\Models\Disease;
use App\Models\Vulnerability\Vulnerability;
use App\Models\Vulnerability\VulnerabilityCategory;
use Filament\Forms\Components\Component;
use Filament\Forms\Components\Concerns;
use Illuminate\Contracts\Support\Htmlable;
use Illuminate\Support\Collection;
use Illuminate\Support\Str;

class VulnerabilityChips extends Component
{
    use Concerns\HasHelperText;
    use Concerns\HasHint;
    use Concerns\HasName;

    protected string $view = 'components.forms.vulnerability-chips';

    protected Collection $categories;

    protected Collection $vulnerabilities;

    final public function __construct(string $name)
    {
        $this->name($name);
        $this->statePath($name);
    }

    public static function make(string $name): static
    {
        $static = app(static::class, ['name' => $name]);
        $static->configure();
        $static->vulnerabilities();

        return $static;
    }

    public function vulnerabilities(): static
    {
        $this->categories = VulnerabilityCategory::cachedList();

        $this->vulnerabilities = Vulnerability::cachedList();

        return $this;
    }

    public function getChips(): Collection
    {
        return collect($this->getRecord()?->{$this->getName()})
            ->filter()
            ->map(fn (mixed $vulnerability) => match (true) {
                \is_string($vulnerability) => $this->getVulnerability($vulnerability),
                $vulnerability instanceof Disability => $this->getDisability($vulnerability),
                $vulnerability instanceof Disease => $this->getDisease($vulnerability),
            });
    }

    public function getFallback(): string | Htmlable | null
    {
        return Str::of(__('catagraphy.vulnerability.none', [
            'vulnerability' => Str::lower($this->getLabel()),
        ]))
            ->wrap('<p class="text-sm italic">', '</p>')
            ->toHtmlString();
    }

    private function getVulnerability(string $name): array
    {
        $vulnerability = $this->vulnerabilities->get($name);

        return [
            'vulnerability' => $vulnerability->name,
            'category' => $vulnerability->category->name,
            'color' => $vulnerability->color,
        ];
    }

    private function getDisability(Disability $disability): array
    {
        $type = $this->vulnerabilities->get($disability->certificate_vulnerability);
        $vulnerability = $this->vulnerabilities->get($disability->type);

        return [
            'vulnerability' => "{$type->name}: {$vulnerability->name}",
            'category' => $type->name,
            'color' => 'bg-warning-200 bg-opacity-25 hover:bg-opacity-75',
            'table' => [
                [
                    'label' => $this->categories->get('DIZ_TIP'),
                    'value' => $vulnerability->name,
                ],
                [
                    'label' => $this->categories->get('DIZ_GR'),
                    'value' => $this->vulnerabilities->get($disability->degree)?->name,
                ],
                [
                    'label' => __('field.cat_diz_dx'),
                    'value' => $disability->diagnostic?->name,
                ],
                [
                    'label' => __('field.cat_diz_iph'),
                    'value' => $disability->has_certificate
                        ? __('forms::components.select.boolean.true')
                        : __('forms::components.select.boolean.false'),
                ],
                [
                    'label' => __('field.cat_diz_deb'),
                    'value' => $disability->start_year,
                ],
            ],
        ];
    }

    private function getDisease(Disease $disease): array
    {
        $category = $this->vulnerabilities->get($disease->category);
        $vulnerability = $this->vulnerabilities->get($disease->type);

        $table = [
            [
                'label' => $this->categories->get('SS_B'),
                'value' => $category?->name,
            ],
        ];

        if ($disease->rare_disease) {
            $table[] = [
                'label' => $this->categories->get('SS_SL'),
                'value' => $this->vulnerabilities->get($disease->rare_disease)?->name,
            ];
        }

        $table[] = [
            'label' => __('field.cat_diz_dx'),
            'value' => $disease->diagnostic?->name,
        ];

        $table[] = [
            'label' => __('field.cat_diz_deb'),
            'value' => $disease->start_year,
        ];

        return [
            'vulnerability' => "{$vulnerability->name}: {$category?->name}",
            'category' => $vulnerability->name,
            'color' => 'bg-warning-200 bg-opacity-25 hover:bg-opacity-75',
            'table' => $table,
        ];
    }
}
